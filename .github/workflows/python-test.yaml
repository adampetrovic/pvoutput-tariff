name: Test
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        PIPENV_VENV_IN_PROJECT=1 pipenv install --dev
    
    - name: Lint with flake8
      run: |
        PIPENV_VENV_IN_PROJECT=1 pipenv run flake8 uploader.py test/
    
    - name: Type check with mypy
      run: |
        PIPENV_VENV_IN_PROJECT=1 pipenv run mypy uploader.py
    
    - name: Check formatting with black
      run: |
        PIPENV_VENV_IN_PROJECT=1 pipenv run black --check uploader.py test/
    
    - name: Check import sorting with isort
      run: |
        PIPENV_VENV_IN_PROJECT=1 pipenv run isort --check-only uploader.py test/
    
    - name: Test with pytest
      run: |
        PIPENV_VENV_IN_PROJECT=1 pipenv run pytest test/ --cov=uploader --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false